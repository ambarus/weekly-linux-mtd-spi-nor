Atendees: Pratyush, Michael, Tudor

1/ What have I accomplished last week? Do I need a second opinion on a specific
patch/topic?

2/ Topics that we want to discuss during the meeting:
ta:
- PR at the end of the week - to propose, review and apply patches of minor
importance
- to send email regarding odd address/length in octal dtr mode
- resend SPI NOR documentation, Collision ID patches
- to update spimem to secify whether the op is a reg read, reg write,
mem read or mem write op.

mw:
 - review PHY calib patches
   -  NXP FAE at least responded that you have to do only once on the
      LS1028A, but at the same time they didn't repsond to the question how
      it behhaves when the temperature drifts
      - NXP says it only needs to be done once.

  - Might want to look into reading SFDP first.
  - If the flash does not support the command does it ignore it?
	ta: usually yes. dt property to indicate SFDP support?
  - ta - action item!: to decide the read SFDP first idea

py:
- kernel email address, repo write rights and patchwork access.
- u-boot: SPI NOR reset sequence
- dynamically discover a flash even if there's no flash ID in the flash ID
table - what's the use case? no strong opinions for now.
- octal dtr padding for the second byte. py to check a macronix, a micron and a
spansion flash and verify how they deal with a single byte write in 8d-8d-8d mode.
Do they ignore the second byte? ta to check how atmel-qspi controller behaves
with 8d-8d-8d single byte writes.
	ta: I've looked on the atmel-qspi octal dtr support, I assume that the
	    controller writes 0xff for the second byte - I think the sequence
	    read-modify-writeback makes more and more sense. Pratyush to check
	    how the flash vendors handle the 1 byte write in 8d-8d-8d mode.

vr:
- Flashes that boot in 8D-8D-8D mode are another problem. Might be able to use SFDP to detect flash mode.
- Read ID is the basic requirement to call a flash "jedec,spi-nor". If you don't have that then can't be JEDEC compatible.
	- ta: Is this specified in JESD216?

3/ What we'll try to do this week:
Check the patchwork list and choose something that you're interested in:
https://patchwork.ozlabs.org/project/linux-mtd/list/?series=&submitter=&state=&q=spi-nor&archive=&delegate=

py:
ta:
  Analyse/write code:
   - FRAMs, MRAMs, SPI NORs, EEPROMs. Check if we can have a single driver
     under mtd
   - parse manufacturer SFDP backbone -> applies to mchp's sst26 flashes,
     they define a vendor specific sfdp table, where the memory organization
     for the individual block protection is described. Parse that and add
     Individual Block Locking ops.
- Review 8D-8D-8D padding series.

4/TODO queue - long term goal
mw:
py:
a/ Clean up how address width is calculated.

ta:
a/ FRAMs, MRAMs, SPI NORs, EEPROMs. Check if we can have a single driver under
mtd.
b/ SFDP init first, then flash_info static init if still needed
c/ frequency sync between SPIMEM and SPI controller
d/ SPI NOR documentation

vr:
a/ dummy.nbytes conversion to dummy.cycles
